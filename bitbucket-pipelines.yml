# This is a sample build configuration for PHP.
# Check our guides at https://confluence.atlassian.com/x/e8YWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: php:7.4.1-fpm

pipelines:
  branches:
    master:
      - step:
          name: Perform Unit Testing Production
          caches:
            - composer
            - node
          script:
            - apt-get update && apt-get install -qy libzip-dev zip libpng-dev git npm curl libmcrypt-dev default-mysql-client
            - docker-php-ext-install pdo_mysql
            - docker-php-ext-install zip
            - docker-php-ext-install gd
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install --no-interaction --prefer-dist  --optimize-autoloader
            - ln -f -s .env.pipelines .env
            - npm install && npm run dev
            - php artisan migrate
            - php artisan serve &
            - sleep 5
            - php artisan config:clear && vendor/bin/phpunit
          services:
            - mysql
      - step:
          name: Execute Production Deployment
          deployment: production
          trigger: manual
          script:
            - apt-get update && apt-get install -y libzip-dev zip
            - docker-php-ext-install zip
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install --no-interaction --prefer-dist  --optimize-autoloader
            - composer require laravel/vapor-cli
            - ln -f -s .env.pipelines .env
            - vendor/bin/vapor deploy production
    staging:
      - step:
          name: Perform Unit Testing Staging
          caches:
            - composer
            - node
          script:
            - apt-get update && apt-get install -qy libzip-dev zip libpng-dev git npm curl libmcrypt-dev default-mysql-client
            - docker-php-ext-install pdo_mysql
            - docker-php-ext-install zip
            - docker-php-ext-install gd
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install --no-interaction --prefer-dist  --optimize-autoloader
            - ln -f -s .env.pipelines .env
            - npm install && npm run dev
            - php artisan migrate
            - php artisan serve &
            - sleep 5
            - php artisan config:clear && vendor/bin/phpunit
          services:
            - mysql
      - step:
          name : Execute Staging Deployment
          deployment: staging
          trigger: manual
          script:
            - apt-get update && apt-get install -y libzip-dev zip
            - docker-php-ext-install zip
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install --no-interaction --prefer-dist  --optimize-autoloader
            - composer require laravel/vapor-cli
            - ln -f -s .env.pipelines .env
            - vendor/bin/vapor deploy staging
    develop:
      - step:
          name: Automated Test & Deploy to Develop
          deployment: test
          caches:
            - composer
            - node
          script:
            - apt-get update && apt-get install -qy libzip-dev zip libpng-dev git npm curl libmcrypt-dev default-mysql-client
            - docker-php-ext-install pdo_mysql
            - docker-php-ext-install zip
            - docker-php-ext-install gd
            - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
            - composer install --no-interaction --prefer-dist  --optimize-autoloader
            - ln -f -s .env.pipelines .env
            - npm install && npm run dev
            - php artisan migrate
            - php artisan passport:install
            - php artisan serve &
            - sleep 5
            - php artisan config:clear && vendor/bin/phpunit
            - composer require laravel/vapor-cli
            - vendor/bin/vapor deploy develop
          services:
            - mysql
definitions:
  services:
    mysql:
      image: mysql:5.7
      environment:
        MYSQL_DATABASE: 'homestead'
        MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
        MYSQL_USER: 'homestead'
        MYSQL_PASSWORD: 'secret'

